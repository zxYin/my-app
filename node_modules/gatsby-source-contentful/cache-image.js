"use strict";

var _regenerator = require("babel-runtime/regenerator");

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require("babel-runtime/helpers/asyncToGenerator");

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var crypto = require(`crypto`);

var _require = require(`path`),
    resolve = _require.resolve,
    parse = _require.parse;

var axios = require(`axios`);

var _require2 = require(`fs-extra`),
    pathExists = _require2.pathExists,
    createWriteStream = _require2.createWriteStream;

module.exports = function () {
  var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(store, image, options) {
    var program, CACHE_DIR, _image$file, url, fileName, details, width, height, maxWidth, maxHeight, resizingBehavior, cropFocus, background, userWidth, userHeight, aspectRatio, resultingWidth, resultingHeight, params, optionsHash, _parse, name, ext, absolutePath, alreadyExists, previewUrl, response;

    return _regenerator2.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            program = store.getState().program;
            CACHE_DIR = resolve(`${program.directory}/.cache/contentful/assets/`);
            _image$file = image.file, url = _image$file.url, fileName = _image$file.fileName, details = _image$file.details;
            width = options.width, height = options.height, maxWidth = options.maxWidth, maxHeight = options.maxHeight, resizingBehavior = options.resizingBehavior, cropFocus = options.cropFocus, background = options.background;
            userWidth = maxWidth || width;
            userHeight = maxHeight || height;
            aspectRatio = details.image.height / details.image.width;
            resultingWidth = Math.round(userWidth || 800);
            resultingHeight = Math.round(userHeight || resultingWidth * aspectRatio);
            params = [`w=${resultingWidth}`, `h=${resultingHeight}`];

            if (resizingBehavior) {
              params.push(`fit=${resizingBehavior}`);
            }
            if (cropFocus) {
              params.push(`crop=${cropFocus}`);
            }
            if (background) {
              params.push(`bg=${background}`);
            }

            optionsHash = crypto.createHash(`md5`).update(JSON.stringify([url].concat(params))).digest(`hex`);
            _parse = parse(fileName), name = _parse.name, ext = _parse.ext;
            absolutePath = resolve(CACHE_DIR, `${name}-${optionsHash}${ext}`);
            _context.next = 18;
            return pathExists(absolutePath);

          case 18:
            alreadyExists = _context.sent;

            if (alreadyExists) {
              _context.next = 26;
              break;
            }

            previewUrl = `http:${url}?${params.join(`&`)}`;
            _context.next = 23;
            return axios({
              method: `get`,
              url: previewUrl,
              responseType: `stream`
            });

          case 23:
            response = _context.sent;
            _context.next = 26;
            return new Promise(function (resolve, reject) {
              var file = createWriteStream(absolutePath);
              response.data.pipe(file);
              file.on(`finish`, resolve);
              file.on(`error`, reject);
            });

          case 26:
            return _context.abrupt("return", absolutePath);

          case 27:
          case "end":
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  function cacheImage(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  }

  return cacheImage;
}();